/*
 * main.cpp
 *
 *  Created on: 18.7.2012
 *      Author: martint
 */


#include "ConverterOptions/optionsloaderxml.h"
#include "ConverterOptions/optionsdatabase.h"
#include "path.h"
#include "ConverterOptions/ffpreset.h"
#include <gtkmm/main.h>

//#include <iostream>
/*


template<class T, class Allocator=std::allocator<T>  >

std::ostream& operator<<(std::ostream &os, const std::list<T>& t){
	typename std::list<T>::const_iterator it;
	for(it = t.begin(); it != t.end(); ++it){
		os << it->getName() <<" ";
	}
	return os;
}
*/
int main(int argc, char *argv[]) {
	Gtk::Main kit(argc, argv);
	Path ffpresetPath("ffpresets");
	Path xmlFilePath("data/audio_video_settings.xml");
	ConverterOptions::FFpreset ffpreset(ffpresetPath);
	std::map<std::string, std::string> encodersWithDescription;
	encodersWithDescription["libx264"] = "description"; //generated by ffmpeg
	ConverterOptions::OptionsLoaderXml xmlParser(
			xmlFilePath,
			encodersWithDescription,
			&ffpreset);
/*
	ConverterOptions::Containers conts = xmlParser.loadContainers();
	std::cout<<conts.getContainers()<<std::endl;

	ConverterOptions::Container cont = conts.getContainerByName("mkv");

	std::cout<<cont.getFormats().getAudioFormatsList()<<std::endl;
	std::cout<<cont.getFormats().getVideoFormatsList()<<std::endl;

	ConverterOptions::Encoders encs = cont.getFormats().getFormatByName("H264").getEncoders();
	std::cout<<encs.getEncoders()<<std::endl;

	auto bitrs = encs.getEncoderByName("libx264").getBitrates();

	for(auto it = bitrs.begin(); it != bitrs.end(); ++it){
		std::cout<<it->getValue()<<std::endl;
	}
	*/
	ConverterOptions::OptionsDatabase optionsDatabase(&xmlParser);
	return 0;
}
